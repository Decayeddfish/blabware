local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- DEFAULTS
getgenv().Prediction = getgenv().Prediction or 0.13
getgenv().JumpOffset = getgenv().JumpOffset or 0.04
getgenv().Aimlock = getgenv().Aimlock or false
getgenv().UseFOV = true
getgenv().FOVSize = 200
getgenv().AimPart = "HumanoidRootPart"
getgenv().ShowFOVCircle = true
getgenv().DotColor = Color3.fromRGB(167, 92, 243)

local RemoteName = "MAINEVENT"
local Argument = "MOUSE"

-- SIMPLE MOBILE GUI
if not LocalPlayer.PlayerGui:FindFirstChild("MobileAimlockGUI") then
    local gui = Instance.new("ScreenGui")
    gui.Name = "MobileAimlockGUI"
    gui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    gui.ResetOnSpawn = false
    gui.IgnoreGuiInset = false

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0.19, 0)
    frame.Position = UDim2.new(0, 0, 0.81, 0)
    frame.BackgroundColor3 = Color3.fromRGB(24, 22, 32)
    frame.BackgroundTransparency = 0.2
    frame.Parent = gui

    local aimlockBtn = Instance.new("TextButton")
    aimlockBtn.Size = UDim2.new(0.22, 0, 0.5, 0)
    aimlockBtn.Position = UDim2.new(0.02, 0, 0.23, 0)
    aimlockBtn.BackgroundColor3 = Color3.fromRGB(167, 92, 243)
    aimlockBtn.TextColor3 = Color3.new(1, 1, 1)
    aimlockBtn.TextScaled = true
    aimlockBtn.Font = Enum.Font.GothamBold
    aimlockBtn.Text = "Aimlock: OFF"
    aimlockBtn.Parent = frame

    local fovBtn = Instance.new("TextButton")
    fovBtn.Size = UDim2.new(0.22, 0, 0.5, 0)
    fovBtn.Position = UDim2.new(0.26, 0, 0.23, 0)
    fovBtn.BackgroundColor3 = Color3.fromRGB(92, 167, 243)
    fovBtn.TextColor3 = Color3.new(1, 1, 1)
    fovBtn.TextScaled = true
    fovBtn.Font = Enum.Font.GothamBold
    fovBtn.Text = "FOV: ON"
    fovBtn.Parent = frame

    local predBox = Instance.new("TextBox")
    predBox.Size = UDim2.new(0.20, 0, 0.35, 0)
    predBox.Position = UDim2.new(0.52, 0, 0.1, 0)
    predBox.PlaceholderText = "Prediction"
    predBox.Text = tostring(getgenv().Prediction)
    predBox.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    predBox.TextColor3 = Color3.new(1, 1, 1)
    predBox.TextScaled = true
    predBox.Font = Enum.Font.Gotham
    predBox.Parent = frame

    local jumpBox = Instance.new("TextBox")
    jumpBox.Size = UDim2.new(0.20, 0, 0.35, 0)
    jumpBox.Position = UDim2.new(0.52, 0, 0.55, 0)
    jumpBox.PlaceholderText = "JumpOff"
    jumpBox.Text = tostring(getgenv().JumpOffset)
    jumpBox.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    jumpBox.TextColor3 = Color3.new(1, 1, 1)
    jumpBox.TextScaled = true
    jumpBox.Font = Enum.Font.Gotham
    jumpBox.Parent = frame

    local setBtn = Instance.new("TextButton")
    setBtn.Size = UDim2.new(0.18, 0, 0.7, 0)
    setBtn.Position = UDim2.new(0.74, 0, 0.15, 0)
    setBtn.BackgroundColor3 = Color3.fromRGB(92, 243, 167)
    setBtn.TextColor3 = Color3.new(1, 1, 1)
    setBtn.TextScaled = true
    setBtn.Font = Enum.Font.GothamBold
    setBtn.Text = "Set"
    setBtn.Parent = frame

    local info = Instance.new("TextLabel")
    info.Size = UDim2.new(0.22, 0, 0.2, 0)
    info.Position = UDim2.new(0.02, 0, 0.01, 0)
    info.BackgroundTransparency = 1
    info.TextColor3 = Color3.fromRGB(200, 200, 200)
    info.Font = Enum.Font.Gotham
    info.TextScaled = true
    info.Text = "Mobile Aimlock"
    info.Parent = frame

    aimlockBtn.MouseButton1Click:Connect(function()
        getgenv().Aimlock = not getgenv().Aimlock
        aimlockBtn.Text = "Aimlock: " .. (getgenv().Aimlock and "ON" or "OFF")
    end)
    fovBtn.MouseButton1Click:Connect(function()
        getgenv().UseFOV = not getgenv().UseFOV
        fovBtn.Text = "FOV: " .. (getgenv().UseFOV and "ON" or "OFF")
    end)
    setBtn.MouseButton1Click:Connect(function()
        local p = tonumber(predBox.Text)
        if p then getgenv().Prediction = p end
        predBox.Text = tostring(getgenv().Prediction)
        local j = tonumber(jumpBox.Text)
        if j then getgenv().JumpOffset = j end
        jumpBox.Text = tostring(getgenv().JumpOffset)
    end)
end

-- FOV Circle (centered for mobile)
if not getgenv().FOV_Circle then
    getgenv().FOV_Circle = Drawing.new("Circle")
    getgenv().FOV_Circle.Filled = false
    getgenv().FOV_Circle.Transparency = 1
    getgenv().FOV_Circle.Thickness = 2
    getgenv().FOV_Circle.Color = Color3.fromRGB(158, 128, 255)
    getgenv().FOV_Circle.NumSides = 100
end
local fovCircle = getgenv().FOV_Circle

-- Dot indicator
if not getgenv().Dot then
    getgenv().Dot = Drawing.new("Circle")
    getgenv().Dot.Filled = true
    getgenv().Dot.Radius = 6
    getgenv().Dot.Thickness = 5
    getgenv().Dot.Transparency = 1
    getgenv().Dot.Color = getgenv().DotColor
end
local dot = getgenv().Dot

-- Target finding (center of screen for mobile)
local function get_closest_target()
    local closest_distance = math.huge
    local closest_target = nil
    local screen_center = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(getgenv().AimPart) and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            local part = player.Character[getgenv().AimPart]
            local screen_pos, on_screen = Camera:WorldToScreenPoint(part.Position)
            if on_screen then
                local dist = (Vector2.new(screen_pos.X, screen_pos.Y) - screen_center).Magnitude
                if (not getgenv().UseFOV or dist <= getgenv().FOVSize) and dist < closest_distance then
                    closest_distance = dist
                    closest_target = player
                end
            end
        end
    end
    return closest_target
end

-- Prediction logic
local function calculate_predicted_position(target)
    if not target or not target.Character or not target.Character:FindFirstChild(getgenv().AimPart) then return nil end
    local root = target.Character[getgenv().AimPart]
    local velocity = root.Velocity
    return root.Position + (velocity * getgenv().Prediction)
end

-- Bullet firing
local function fire_bullet(pred_pos)
    local remote_event = ReplicatedStorage:FindFirstChild(RemoteName)
    if remote_event and pred_pos then
        remote_event:FireServer(Argument, pred_pos)
    end
end

-- Main loop
local Victim = nil

RunService.RenderStepped:Connect(function()
    -- FOV Circle (centered for mobile)
    if fovCircle then
        fovCircle.Visible = getgenv().UseFOV and getgenv().ShowFOVCircle
        fovCircle.Radius = getgenv().FOVSize
        fovCircle.Position = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2 + GuiService:GetGuiInset().Y)
        fovCircle.Color = Color3.fromRGB(158, 128, 255)
    end

    -- Mobile Aimlock and dot
    if getgenv().Aimlock then
        if not Victim or not Victim.Character or not Victim.Character:FindFirstChild("Humanoid") or Victim.Character.Humanoid.Health <= 0 then
            Victim = get_closest_target()
        end
        if Victim then
            local pred_pos = calculate_predicted_position(Victim)
            if pred_pos then
                -- Show dot at predicted position if on screen
                local screen_pos, on_screen = Camera:WorldToScreenPoint(pred_pos + Vector3.new(0, getgenv().JumpOffset, 0))
                if on_screen then
                    dot.Visible = true
                    dot.Position = Vector2.new(screen_pos.X, screen_pos.Y)
                    dot.Color = getgenv().DotColor
                else
                    dot.Visible = false
                end
                -- Fire bullet
                fire_bullet(pred_pos + Vector3.new(0, getgenv().JumpOffset, 0))
            else
                dot.Visible = false
            end
        else
            dot.Visible = false
        end
    else
        Victim = nil
        dot.Visible = false
    end
end)
