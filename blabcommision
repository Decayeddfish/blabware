local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- DEFAULTS
getgenv().Prediction = getgenv().Prediction or 0.14698413210558095
getgenv().JumpOffset = getgenv().JumpOffset or 0.08
getgenv().Aimlock = getgenv().Aimlock or false
getgenv().UseFOV = true
getgenv().FOVSize = 200
getgenv().AimPart = "HumanoidRootPart"
getgenv().ShowFOVCircle = true
getgenv().ShowDot = true
getgenv().DotColor = Color3.fromRGB(167, 92, 243)

local RemoteName = "MAINEVENT"
local Argument = "MOUSE"

-- REMOVE OLD GUI
local old = LocalPlayer.PlayerGui:FindFirstChild("MobileAimlockGUI")
if old then old:Destroy() end
if LocalPlayer.PlayerGui:FindFirstChild("AimlockButtonGUI") then
    LocalPlayer.PlayerGui.AimlockButtonGUI:Destroy()
end

-- BUTTON GUI (draggable, hold to move, press to activate aimlock)
local gui = Instance.new("ScreenGui")
gui.Name = "AimlockButtonGUI"
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")
gui.ResetOnSpawn = false

local dragBtn = Instance.new("TextButton")
dragBtn.Size = UDim2.new(0, 70, 0, 70)
dragBtn.Position = UDim2.new(0.5, -35, 0.85, 0)
dragBtn.BackgroundColor3 = Color3.fromRGB(167, 92, 243)
dragBtn.TextColor3 = Color3.new(1, 1, 1)
dragBtn.TextScaled = true
dragBtn.Font = Enum.Font.GothamBold
dragBtn.Text = "LOCK\n["..(getgenv().Aimlock and "ON" or "OFF").."]"
dragBtn.AutoButtonColor = true
dragBtn.Parent = gui

-- Dragging logic
local dragging, dragInput, dragStart, startPos

dragBtn.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = dragBtn.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

dragBtn.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        dragBtn.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- Activate aimlock on press
dragBtn.MouseButton1Click:Connect(function()
    getgenv().Aimlock = not getgenv().Aimlock
    dragBtn.Text = "LOCK\n["..(getgenv().Aimlock and "ON" or "OFF").."]"
end)

-- FOV Circle (centered for mobile)
if not getgenv().FOV_Circle then
    getgenv().FOV_Circle = Drawing.new("Circle")
    getgenv().FOV_Circle.Filled = false
    getgenv().FOV_Circle.Transparency = 1
    getgenv().FOV_Circle.Thickness = 2
    getgenv().FOV_Circle.Color = Color3.fromRGB(158, 128, 255)
    getgenv().FOV_Circle.NumSides = 100
end
local fovCircle = getgenv().FOV_Circle

-- REMOVE OLD DOTPARTS
for _,v in ipairs(workspace:GetChildren()) do
    if v:IsA("Part") and v.Name == "DotParent" then v:Destroy() end
end

-- Billboard Dot setup
local DotParent = Instance.new("Part", workspace)
DotParent.Name = "DotParent"
DotParent.Anchored = true
DotParent.CanCollide = false
DotParent.Size = Vector3.new(0.1, 0.1, 0.1)
DotParent.Transparency = 1
DotParent.CFrame = CFrame.new(0, 9999, 0)

local newBillboard = Instance.new("BillboardGui", DotParent)
newBillboard.Name = "azure_billboarddot"
newBillboard.Adornee = DotParent
newBillboard.Size = UDim2.new(0.6, 0, 0.6, 0)
newBillboard.AlwaysOnTop = true

local newFrame = Instance.new("Frame")
newFrame.Size = UDim2.new(1, 0, 1, 0)
newFrame.BackgroundColor3 = getgenv().DotColor
newFrame.BackgroundTransparency = 0
newFrame.BorderSizePixel = 0
newFrame.AnchorPoint = Vector2.new(0.5, 0.5)
newFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
newFrame.Parent = newBillboard
newFrame.Visible = false

-- Target finding (center of screen for mobile)
local function get_closest_target()
    local closest_distance = math.huge
    local closest_target = nil
    local screen_center = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(getgenv().AimPart) and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            local part = player.Character[getgenv().AimPart]
            local screen_pos, on_screen = Camera:WorldToScreenPoint(part.Position)
            if on_screen then
                local dist = (Vector2.new(screen_pos.X, screen_pos.Y) - screen_center).Magnitude
                if (not getgenv().UseFOV or dist <= getgenv().FOVSize) and dist < closest_distance then
                    closest_distance = dist
                    closest_target = player
                end
            end
        end
    end
    return closest_target
end

-- Prediction logic
local function calculate_predicted_position(target)
    if not target or not target.Character or not target.Character:FindFirstChild(getgenv().AimPart) then return nil end
    local root = target.Character[getgenv().AimPart]
    local velocity = root.Velocity
    return root.Position + (velocity * getgenv().Prediction)
end

-- Bullet firing
local function fire_bullet(pred_pos)
    local remote_event = ReplicatedStorage:FindFirstChild(RemoteName)
    if remote_event and pred_pos then
        remote_event:FireServer(Argument, pred_pos)
    end
end

-- Helper to check if target is valid
local function is_target_valid(target)
    return target
        and target.Character
        and target.Character:FindFirstChild(getgenv().AimPart)
        and target.Character:FindFirstChild("Humanoid")
        and target.Character.Humanoid.Health > 0
end

-- Main loop
local Victim = nil

RunService.RenderStepped:Connect(function()
    -- FOV Circle (centered for mobile)
    if fovCircle then
        fovCircle.Visible = getgenv().UseFOV and getgenv().ShowFOVCircle
        fovCircle.Radius = getgenv().FOVSize
        fovCircle.Position = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2 + GuiService:GetGuiInset().Y)
        fovCircle.Color = Color3.fromRGB(158, 128, 255)
    end

    if getgenv().Aimlock then
        if not is_target_valid(Victim) then
            Victim = get_closest_target()
        end

        if is_target_valid(Victim) then
            local predicted_world_position = calculate_predicted_position(Victim)
            if predicted_world_position then
                local screen_pos, on_screen = Camera:WorldToScreenPoint(predicted_world_position + Vector3.new(0, getgenv().JumpOffset, 0))
                if on_screen and getgenv().ShowDot then
                    newFrame.Visible = true
                    DotParent.CFrame = CFrame.new(predicted_world_position + Vector3.new(0, getgenv().JumpOffset, 0))
                else
                    newFrame.Visible = false
                    DotParent.CFrame = CFrame.new(0, 9999, 0)
                end

                fire_bullet(predicted_world_position + Vector3.new(0, getgenv().JumpOffset, 0))
            else
                newFrame.Visible = false
                DotParent.CFrame = CFrame.new(0, 9999, 0)
            end
        else
            newFrame.Visible = false
            DotParent.CFrame = CFrame.new(0, 9999, 0)
        end
    else
        Victim = nil
        newFrame.Visible = false
        DotParent.CFrame = CFrame.new(0, 9999, 0)
    end
end)
